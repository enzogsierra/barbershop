{"version":3,"sources":["app.js"],"names":["summary","id","name","date","time","services","paginationHandler","document","querySelectorAll","forEach","btn","addEventListener","openTab","getAttribute","tabid","tab","attTabId","querySelector","style","display","classList","showSummary","async","loadServices","api","fetch","window","location","href","createServices","json","error","console","log","service","text","price","card","createElement","setAttribute","innerHTML","parseInt","onclick","onServiceSelected","appendChild","element","elementServiceId","some","s","filter","remove","add","dateHandler","e","day","Date","target","value","getUTCDay","includes","showAlert","hideAlert","timeHandler","val","split","def","div","Object","values","length","total","html","dateSplit","dateText","toLocaleString","weekday","month","parseFloat","bookDate","form","FormData","append","map","method","body","success","Swal","fire","icon","title","confirmButtonText","then","reload","alertTimeout","msg","setTimeout","clearTimeout"],"mappings":"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","file":"bundle.js","sourcesContent":["const summary =\r\n{\r\n    id: null,\r\n    name: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n    services: []\r\n};\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function()\r\n{\r\n    // Init\r\n    openTab(1);\r\n    summary.id = document.querySelector(\"input#date-id\").value;\r\n    summary.name = document.querySelector(\"input#date-name\").value; // Leer el nombre desde el input en \"Reservacion\"\r\n\r\n    //\r\n    paginationHandler();\r\n    loadServices();\r\n    dateHandler();\r\n    timeHandler();\r\n});\r\n\r\n\r\n// Pagination\r\nfunction paginationHandler()\r\n{\r\n    const buttons = document.querySelectorAll(\"button[tab-id]\");\r\n    buttons.forEach(btn =>\r\n    {\r\n        btn.addEventListener(\"click\", () =>\r\n        {\r\n            const tabid = btn.getAttribute(\"tab-id\");\r\n            openTab(tabid);\r\n        });\r\n    });\r\n}\r\n\r\nfunction openTab(tabid)\r\n{\r\n    const tabs = document.querySelectorAll(\"div.tab[tab-id]\");\r\n    tabs.forEach(tab => // Iterar sobre todos los tabs y mostrarlos/ocultarlos\r\n    {\r\n        const attTabId = tab.getAttribute(\"tab-id\");\r\n        const btn = document.querySelector(`button[tab-id=\"${attTabId}\"]`); // Seleccionar el boton que muestra el tab\r\n\r\n        if(attTabId == tabid) // Mostrar tab\r\n        {\r\n            tab.style.display = \"block\";\r\n            btn.classList = \"col btn btn-primary\";\r\n\r\n            // Resumen\r\n            if(tabid == 3)\r\n            {\r\n                showSummary();\r\n            }\r\n        }\r\n        else // Ocultar tab\r\n        {\r\n            tab.style.display = \"none\";\r\n            btn.classList = \"col btn btn-outline-light\";\r\n        }\r\n    });\r\n}\r\n\r\n\r\n// Services\r\nasync function loadServices()\r\n{\r\n    try\r\n    {\r\n        const api = await fetch(`${window.location.href}api/services`);\r\n        const services = await api.json();\r\n        createServices(services);\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction createServices(services)\r\n{\r\n    const tab = document.querySelector(\".tab-services\");\r\n    services.forEach(service =>\r\n    {\r\n        const {id, text, price} = service;\r\n\r\n        //\r\n        const card = document.createElement(\"DIV\");\r\n        card.classList = \"service p-3 rounded\";\r\n        card.setAttribute(\"service-id\", `${id}`);\r\n    \r\n        card.innerHTML = \r\n        `\r\n            <p class=\"service-text my-0 fs-5\">${text}</p>\r\n            <p class=\"service-price my-0 fs-4 fw-bold\">$${parseInt(price)}</p>\r\n        `;\r\n        \r\n        card.onclick = function()\r\n        {\r\n            onServiceSelected(service, card);\r\n        }\r\n\r\n        //\r\n        tab.appendChild(card);\r\n    });\r\n}\r\n\r\nfunction onServiceSelected(service, element)\r\n{\r\n    const {services} = summary;\r\n    const elementServiceId = element.getAttribute(\"service-id\");\r\n\r\n    // El servicio está seleccionado\r\n    if(services.some(s => s.id === elementServiceId))\r\n    {\r\n        // Quitar servicio de la lista\r\n        summary.services = services.filter(s => s.id !== elementServiceId);\r\n        element.classList.remove(\"service-selected\");\r\n    }\r\n    else // El servicio no está seleccionado\r\n    {\r\n        // Agregar servicio a la lista\r\n        summary.services = [...services, service];\r\n        element.classList.add(\"service-selected\");\r\n    }\r\n}\r\n\r\n\r\n// Fecha y hora\r\nfunction dateHandler()\r\n{\r\n    const date = document.querySelector(\"input#date\");\r\n    date.addEventListener(\"input\", function(e)\r\n    {\r\n        // Extraer el número del día de la fecha seleccionada (0=domingo, 1=lunes, ...)\r\n        const day = new Date(e.target.value).getUTCDay(); \r\n\r\n        // Verificar día seleccionado\r\n        if([0, 6].includes(day)) // Día no válido\r\n        {\r\n            e.target.value = \"\";\r\n            showAlert(\"Fines de semanas no permitidos\");\r\n        }\r\n        else // Día válido\r\n        {\r\n            summary.date = e.target.value;\r\n            hideAlert();\r\n        }\r\n    });\r\n}\r\n\r\nfunction timeHandler()\r\n{\r\n    const time = document.querySelector(\"input#time\");\r\n    time.addEventListener(\"input\", function(e)\r\n    {\r\n        const val = e.target.value.split(\":\");\r\n\r\n        if(val[0] >= 8 && val[0] <= 21) // Hora valida\r\n        {\r\n            summary.time = e.target.value;\r\n            hideAlert();\r\n        }\r\n        else // Hora no válida\r\n        {\r\n            e.target.value = \"\";\r\n            showAlert(\"Nuestro horario de atención es de 8am a 10pm\")\r\n        }\r\n    });\r\n}\r\n\r\n\r\n// Resumen\r\nfunction showSummary()\r\n{\r\n    const def = document.querySelector(\".summary-default\");\r\n    const div = document.querySelector(\".summary\");\r\n\r\n    if(Object.values(summary).includes(\"\") || summary.services.length === 0) // Hay un string vacío - faltan datos\r\n    {\r\n        def.classList.remove(\"d-none\");\r\n        div.classList.add(\"d-none\");\r\n        return;\r\n    }\r\n\r\n    // Datos validados\r\n    def.classList.add(\"d-none\");\r\n    div.classList.remove(\"d-none\");\r\n\r\n    //\r\n    const {name, date, time, services} = summary;\r\n    let total = 0;\r\n    let html = \"\";\r\n\r\n    // Header\r\n    html += `<h2 class=\"my-0 text-center\">Resumen</h2>`;\r\n\r\n    // Resumen-cliente\r\n    const dateSplit = date.split(\"-\");\r\n    const dateObj = new Date(dateSplit[0], dateSplit[1] - 1, dateSplit[2]);\r\n    const dateText = dateObj.toLocaleString('es-ES', \r\n    {\r\n        weekday: 'long', \r\n        day: 'numeric', \r\n        month: 'long',\r\n    });\r\n\r\n    html +=\r\n    `\r\n        <div class=\"my-4 p-3 d-flex flex-column gap-3 text-start rounded bg-light bg-gradient bg-opacity-25\">\r\n            <h5 class=\"fs-4 mb-0 px-0 col text-info\">\r\n                <i class=\"fas fa-user\" title=\"Cliente\"></i>\r\n                <span class=\"text-white\">${name}</span>\r\n            </h5>\r\n            <h5 class=\"fs-4 mb-0 px-0 col text-info\">\r\n                <i class=\"far fa-calendar\" title=\"Fecha\"></i>\r\n                <span class=\"text-white\">${dateText}</span>\r\n            </h5>\r\n            <h5 class=\"fs-4 mb-0 px-0 col text-info\">\r\n                <i class=\"far fa-clock\" title=\"Hora\"></i>\r\n                <span class=\"text-white\">${time}</span>\r\n            </h5>\r\n        </div>\r\n    `;\r\n\r\n    // Resumen-servicios\r\n    html += \r\n    `\r\n        <div class=\"my-4 px-4 py-3 d-flex flex-column rounded text-start bg-light bg-gradient bg-opacity-25\">\r\n            <div class=\"mb-3 p-0 d-flex justify-content-between gap-2 text-info fw-bold\">\r\n                <p class=\"m-0 fs-3\">Servicios</p>\r\n                <p class=\"m-0 fs-3\">Precio</p>\r\n            </div>\r\n    `;\r\n    services.forEach(service =>\r\n    {\r\n        total += parseFloat(service.price);\r\n        html += \r\n        `\r\n            <div class=\"m-0 px-1 py-1 d-flex justify-content-between gap-3 border-top\">\r\n                <p class=\"m-0 fs-5 fw-light\">${service.text}</p>\r\n                <p class=\"m-0 fs-5 fw-light\">&dollar;${parseInt(service.price)}</p>\r\n            </div>\r\n        `;\r\n    });\r\n    html +=\r\n    `\r\n            <div class=\"pt-2 pe-1 d-flex justify-content-end gap-4 border-top fw-bold\">\r\n                <p class=\"m-0 fs-4 text-info\">Total</p>\r\n                <p class=\"m-0 fs-4\">&dollar;${parseInt(total)}</p>\r\n            </div>\r\n\r\n            <div class=\"w-auto text-end\">\r\n                <button class=\"btn btn-primary mt-3\" id=\"summary-book-btn\">Reservar</button>\r\n            </div>\r\n        </div>\r\n    `;\r\n\r\n    //\r\n    div.innerHTML = html;\r\n\r\n    const bookbtn = div.querySelector(\"#summary-book-btn\");\r\n    bookbtn.onclick = bookDate;\r\n}\r\n\r\nasync function bookDate()\r\n{\r\n    const {date, time, services} = summary;\r\n\r\n    // Crear form\r\n    const form = new FormData();\r\n    form.append(\"date\", date);\r\n    form.append(\"time\", time);\r\n    form.append(\"services\", services.map(service => service.id));\r\n    //console.log([...form]);\r\n\r\n    try\r\n    {\r\n        // Enviar\r\n        const api = await fetch(`${window.location.href}api/book-date`,\r\n        {\r\n            method: \"POST\",\r\n            body: form\r\n        });\r\n        const response = await api.json();\r\n\r\n        // Se creó la cita\r\n        if(response.success)\r\n        {\r\n            Swal.fire(\r\n            {\r\n                icon: \"success\",\r\n                title: \"Reservado!\",\r\n                text: \"Tu cita se reservó correctamente.\",\r\n                confirmButtonText: \"Aceptar\"\r\n            }).then(() => { window.location.reload(); });\r\n        }\r\n    }\r\n    catch\r\n    {\r\n        Swal.fire(\r\n        {\r\n            icon: 'error',\r\n            title: 'Ocurrió un error',\r\n            text: 'Hubo un error al reservar tu cita, intenta nuevamente más tarde'\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// Alertas\r\nlet alertTimeout = 0;\r\n\r\nfunction showAlert(msg)\r\n{\r\n    if(alertTimeout) hideAlert();\r\n\r\n    //\r\n    const div = document.querySelector(\".form-alert\");\r\n    div.classList.remove(\"d-none\");\r\n    div.innerHTML = \r\n    `\r\n        <p class=\"my-0\">\r\n            <strong>&CenterDot;</strong> ${msg}\r\n        </p>\r\n    `;\r\n\r\n    //\r\n    alertTimeout = setTimeout(function() \r\n    {\r\n        hideAlert();\r\n    }, 5000);\r\n}\r\nfunction hideAlert()\r\n{\r\n    const div = document.querySelector(\".form-alert\");\r\n    div.classList.add(\"d-none\");\r\n    div.innerHTML = \"\";\r\n\r\n    clearTimeout(alertTimeout);\r\n    alertTimeout = 0;\r\n}"]}