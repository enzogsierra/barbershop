let editing=!1,originalHTML="",Toast=[];async function onServiceAdded(e){e.preventDefault();const t=document.querySelector("#service-new-text").value,n=document.querySelector("#service-new-price").value,i=new FormData;i.append("text",t),i.append("price",n);const r=await sendForm(i,"new");if(200===r.response){const e=document.querySelectorAll("tr[service-id]").length+1,i=document.createElement("TR");i.setAttribute("service-id",""+r.id),i.innerHTML=`\n            <tr service-id="${r.id}">\n                <th scope="row">${e}</th>\n                <td id="service-text">${t}</td>\n                <td id="service-price">$${n}</td>\n                \n                <td class="text-center text-nowrap">\n                    <button class="btn btn-secondary col" id="service-btn-edit" title="Editar"><i class="far fa-edit btn-child"></i></button>\n                    <button class="btn btn-outline-danger col" id="service-btn-delete" title="Eliminar"><i class="far fa-trash-alt btn-child"></i></button>\n                </td>\n            </tr>\n        `,document.querySelector("tbody#services").appendChild(i),document.querySelector("#service-form-new").reset(),Toast.fire({icon:"success",title:"Servicio creado correctamente"})}else Toast.fire({icon:"error",title:"Hubo un error al procesar la información. Verifica que los datos sean correctos.\nCódigo "+r.response})}function onServicesClick(e){const t=e.target.classList.contains("btn-child")?e.target.parentElement:e.target;if("service-btn-edit"==t.id){editing&&document.querySelector("#service-btn-cancel").click(),editing=!0;const e=t.parentElement.parentElement,n=e.getAttribute("service-id"),i=e.querySelector("#service-text").textContent,r=e.querySelector("#service-price").textContent.substring(1);e.classList.add("table-active"),originalHTML=e.innerHTML,e.innerHTML=`\n            <form>\n                <th scope="row">${n}</tr>\n                <td scope="col">\n                    <div class="input-group">\n                        <span class="input-group-text"><i class="far fa-file-alt"></i></span>\n                        <input type="text" class="form-control" id="service-edited-text" value="${i}" maxlength="64" required>\n                    </div>\n                    <p class="form-text my-0">El texto debe tener entre 5 y 64 caracteres</p>\n                </td>\n                <td width="20%">\n                    <div class="input-group">\n                        <span class="input-group-text"><i class="fas fa-dollar-sign"></i></span>\n                        <input type="number" class="form-control" id="service-edited-price" value="${r}" min="0" required>\n                    </div>\n                    <p class="d-none form-text">Puedes usar decimales (Ejemplo: <strong>4,99</strong>)</p>\n                </td>\n\n                <td class="text-center text-nowrap align-middle">\n                    <button type="submit" class="btn btn-success" id="service-btn-save" title="Guardar"><i class="far fa-save"></i></button>\n                    <button type="button" class="btn btn-secondary" id="service-btn-cancel" title="Cancelar"><i class="fas fa-times-circle"></i></button>\n                </td>\n            </form>\n        `;const c=e.querySelector("#service-btn-save"),o=e.querySelector("#service-btn-cancel");c.onclick=async function(t){t.preventDefault();const i=e.querySelector("#service-edited-text").value,r=e.querySelector("#service-edited-price").value,c=new FormData;c.append("id",n),c.append("text",i),c.append("price",r);const s=await sendForm(c,"edit");200==s.response?(e.innerHTML=originalHTML,e.querySelector("#service-text").innerText=""+i,e.querySelector("#service-price").innerText="$"+parseFloat(r).toFixed(2),originalHTML=e.innerHTML,o.click(),Toast.fire({icon:"success",title:"Servicio editado correctamente"})):Toast.fire({icon:"error",title:"Hubo un error al procesar la información. Verifica que los datos sean correctos.\nCódigo "+s.response})},o.addEventListener("click",(function(){editing=!1,e.classList.remove("table-active"),e.innerHTML=originalHTML}))}if("service-btn-delete"===t.id){if(editing)return void Toast.fire({icon:"error",title:"Termina de editar el servicio actual antes de continuar"});const e=t.parentElement.parentElement,n=e.getAttribute("service-id");Swal.fire({title:"Eliminar",text:"¿Seguro que quieres eliminar este servicio? Esta acción es irreversible",icon:"warning",showCancelButton:!0,confirmButtonColor:"#dc3545",cancelButtonColor:"#6c757d",confirmButtonText:"Eliminar",cancelButtonText:"Cancelar"}).then((async function(t){if(t.isConfirmed){const t=new FormData;t.append("id",n);const i=await sendForm(t,"delete");200===i.response?(e.remove(),Toast.fire({icon:"success",title:"Servicio eliminado correctamente"})):Toast.fire({icon:"error",title:"Hubo un error y no pudimos eliminar este servicio.\nCódigo "+i.response})}}))}}async function sendForm(e,t){const n={method:"POST",body:e},i=await fetch(`http://${window.location.host}/admin/services/${t}`,n);return await i.json()}document.addEventListener("DOMContentLoaded",(function(){document.querySelector("#service-btn-new").addEventListener("click",onServiceAdded);document.querySelector("tbody#services").addEventListener("click",onServicesClick),Toast=Swal.mixin({toast:!0,position:"top-end",showConfirmButton:!1,timer:4e3,timerProgressBar:!0,didOpen:e=>{e.addEventListener("mouseenter",Swal.stopTimer),e.addEventListener("mouseleave",Swal.resumeTimer)}})}));